15. 可能な場面では常に constexpr を用いる
========================================================

# TODO

* Objectの場合
    + コンパイル時に既知の値であれば、constexpr を付与できる。(コンパイル時定数として使用可)
    + const は、コンパイル時に既知でないケースがある点が、constexprとは異なる。

* 関数の場合
    + constexpr 関数はコンパイル時定数の記述が必要な場面で使用できる
        - 実引数の値がコンパイル時に既知であれば、結果はコンパイル時に算出される
        - コンパイル時に未知の値を与えて呼び出した場合、通常の関数として振る舞う
    + C++11では、return文の１行のみしか記載できない(C++14では緩和)
    + 引数・返却値にはリテラル型のみ使用可能



.. note::

    constexpr オブジェクトは const であり、コンパイル時に既知な値で初期化する（その逆は不可）

    constexpr 関数は、コンパイル時に既知な値を実引数に与えられれば、コンパイル時に使用可能な値を返す

    constexpr は、「C++が定数式を要求する場面で僕を使えるよ」という主張である



